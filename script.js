
(function(){
  // --- This is the script.js content generated by assistant ---
  const DEFAULT_BACKEND = 'https://svs-loveletter-backend.onrender.com/api/generate';
  const I18N = {"de":{"title":"SVS LoveLetter AI","placeholder":"z. B. 'lustig, Fernbeziehung, unterstützend'","generate":"Erstellen","clear":"Löschen","copy":"Kopieren","download":"Herunterladen (.txt)","choosingTheme":"Design wählen","language":"Sprache","promptLabel":"Beispiel-Prompt","resultTitle":"Generierter Brief","backendLabel":"Backend-URL","notes":"Hinweis: Keine API-Keys im Browser. Für Produktion Backend nutzen.","enterKeywords":"Bitte Stichworte eingeben"},"en":{"title":"SVS LoveLetter AI","placeholder":"e.g. "funny, long distance, supportive"","generate":"Generate","clear":"Clear","copy":"Copy","download":"Download (.txt)","choosingTheme":"Choose theme","language":"Language","promptLabel":"Example prompt","resultTitle":"Generated letter","backendLabel":"Backend URL","notes":"Note: Do not put API keys in the browser. Use a backend in production.","enterKeywords":"Please enter keywords"},"es":{"title":"SVS LoveLetter AI","placeholder":"ej. "divertido, larga distancia, apoyo"","generate":"Generar","clear":"Borrar","copy":"Copiar","download":"Descargar (.txt)","choosingTheme":"Elegir diseño","language":"Idioma","promptLabel":"Ejemplo de prompt","resultTitle":"Carta generada","backendLabel":"URL del backend","notes":"Nota: No pongas claves API en el navegador. Usa backend en producción.","enterKeywords":"Por favor introduce palabras clave"},"fr":{"title":"SVS LoveLetter AI","placeholder":"ex. "drôle, longue distance, soutien"","generate":"Générer","clear":"Effacer","copy":"Copier","download":"Télécharger (.txt)","choosingTheme":"Choisir le thème","language":"Langue","promptLabel":"Exemple d'invite","resultTitle":"Lettre générée","backendLabel":"URL du backend","notes":"Remarque : N'insérez pas de clés API dans le navigateur. Utilisez un backend.","enterKeywords":"Veuillez entrer des mots-clés"},"it":{"title":"SVS LoveLetter AI","placeholder":"es. "divertente, lunga distanza, supporto"","generate":"Genera","clear":"Cancella","copy":"Copia","download":"Scarica (.txt)","choosingTheme":"Scegli tema","language":"Lingua","promptLabel":"Esempio di prompt","resultTitle":"Lettera generata","backendLabel":"URL backend","notes":"Nota: non inserire chiavi API nel browser. Usa un backend.","enterKeywords":"Inserisci parole chiave"}};
  const state={lang:'de',theme:'girls'};
  const $ = id => document.getElementById(id);
  const qs = sel => document.querySelector(sel);
  const qsa = sel => Array.from(document.querySelectorAll(sel));
  const keywordsEl = $('keywords');
  const generateBtn = $('generateBtn');
  const clearBtn = $('clearBtn');
  const resultArea = $('resultArea');
  const copyBtn = $('copyBtn');
  const downloadBtn = $('downloadBtn');
  const backendUrlInput = $('backendUrl');
  const promptPreview = $('promptPreview');
  const langLabel = $('langLabel');
  const themeGirlsBtn = $('themeGirls');
  const themeBoysBtn = $('themeBoys');
  if (!keywordsEl || !generateBtn || !resultArea || !backendUrlInput) { console.error('Einige notwendige DOM-Elemente fehlen.'); return; }
  function t(k){ return (I18N[state.lang] && I18N[state.lang][k]) || ''; }
  function updateUIStrings(){
    if ($('labelKeywords')) $('labelKeywords').innerText = state.lang === 'de' ? 'Stichworte (z.B. romantisch, lustig)' : (I18N[state.lang].placeholder || '');
    keywordsEl.placeholder = t('placeholder');
    if (generateBtn) generateBtn.innerText = t('generate');
    if (clearBtn) clearBtn.innerText = t('clear');
    if (copyBtn) copyBtn.innerText = t('copy');
    if (downloadBtn) downloadBtn.innerText = t('download');
    if ($('labelTheme')) $('labelTheme').innerText = t('choosingTheme');
    if ($('labelLang')) $('labelLang').innerText = t('language');
    if ($('labelPrompt')) $('labelPrompt').innerText = t('promptLabel');
    if ($('labelResultTitle')) $('labelResultTitle').innerText = t('resultTitle');
    if ($('labelBackend')) $('labelBackend').innerText = t('backendLabel');
    if ($('footerText')) $('footerText').innerText = t('notes');
    if (langLabel) langLabel.innerText = state.lang.toUpperCase();
  }
  function applyTheme(theme){ state.theme=theme; document.body.classList.toggle('theme-girls', theme==='girls'); document.body.classList.toggle('theme-boys', theme==='boys'); const accent = theme==='girls' ? getComputedStyle(document.documentElement).getPropertyValue('--pink') || '#FF69B4' : getComputedStyle(document.documentElement).getPropertyValue('--blue') || '#1E90FF'; qsa('.btn-primary').forEach(b=>b.style.background=accent); }
  function buildPrompt(keywords, lang, tone, length){ if (!keywords || !keywords.trim()) keywords = '<keywords>'; if (lang === 'de') { const toneDesc = tone === 'friendly' ? 'warm, unterstützend' : 'leidenschaftlich, poetisch'; const lengthDesc = length === 'long' ? 'ausführlichen' : 'kurzen'; return `Du bist ein professioneller Liebesbrief-Autor. Schreibe einen ${lengthDesc} Liebesbrief mit einem ${toneDesc} Ton. Verwende diese Stichworte: ${keywords}. Schreibe auf Deutsch. Der Brief soll natürlich klingen und eine kurze Grußformel enthalten.`; } else { return `You are a professional love-letter writer. Create a ${length === 'long' ? 'long' : 'short'} love letter with a ${tone === 'friendly' ? 'warm, supportive' : 'passionate, poetic'} tone. Use these keywords: ${keywords}. Output in language: ${lang}. Include a short sign-off.`; } }
  function updatePromptPreview(){ const kw = (keywordsEl.value || '').trim() || '<keywords>'; const tone = (document.querySelector('input[name="tone"]:checked') || {value:'friendly'}).value; const length = (document.querySelector('input[name="length"]:checked') || {value:'long'}).value; const prompt = buildPrompt(kw, state.lang, tone, length); if (promptPreview) promptPreview.innerText = prompt; }
  async function copyResult(){ const txt = resultArea.innerText || ''; if (!txt) return; try{ await navigator.clipboard.writeText(txt); copyBtn.innerText = `${t('copy')} ✓`; setTimeout(()=>copyBtn.innerText = t('copy'),1400); }catch(e){ alert('Kopieren fehlgeschlagen: ' + (e && e.message ? e.message : e)); } }
  function downloadResult(){ const txt = resultArea.innerText || ''; const blob = new Blob([txt], {type:'text/plain;charset=utf-8'}); const a=document.createElement('a'); a.href=URL.createObjectURL(blob); a.download='lovely-letter.txt'; document.body.appendChild(a); a.click(); a.remove(); URL.revokeObjectURL(a.href); }
  async function generate(){ const keywords = (keywordsEl.value || '').trim(); if (!keywords) { alert(t('enterKeywords')); return; } const tone = (document.querySelector('input[name="tone"]:checked') || {value:'friendly'}).value; const length = (document.querySelector('input[name="length"]:checked') || {value:'long'}).value; const backendUrl = (backendUrlInput.value || '').trim() || DEFAULT_BACKEND; const prompt = buildPrompt(keywords, state.lang, tone, length); resultArea.innerText = '…generiere…'; try{ const url = backendUrl.replace(/\/+$/,'') + '/api/generate'; const resp = await fetch(url, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({ keywords, lang: state.lang, options: { tone, length } }) }); if (resp.ok){ const j = await resp.json(); const text = j.text || j.result || j.message || JSON.stringify(j); resultArea.innerText = text; return; } else { const txt = await resp.text(); console.warn('Backend error', resp.status, txt); } }catch(err){ console.warn('Backend unreachable:', err && err.message ? err.message : err); } const mocks = { de: `Mein lieber Schatz,\n\nSeitdem du in mein Leben getreten bist, füllst du jeden Tag mit Wärme und Lachen. Deine Nähe gibt mir Halt, deine Worte schenken mir Mut. Mit jedem Augenblick wächst meine Zuneigung zu dir – und auch wenn wir manchmal getrennt sind, trage ich dich immer bei mir.\n\nIn Liebe,\nDein/e`, en: `My dearest,\n\nFrom the moment we met, your smile has brightened every day. Your support and kindness mean the world to me. Even across the distance, I feel close to you when I think of our shared moments.\n\nWith love,\nYours`, es: `Mi querido/a,\n\nDesde que te conocí, llenas mis días de alegría. Tu apoyo y ternura son mi consuelo. Aunque estemos lejos, siento tu cercanía en cada recuerdo que compartimos.\n\nCon amor,\nTuyo/a`, fr: `Mon cher / Ma chère,\n\nDepuis notre rencontre, tu illumines mes journées. Ta présence, même à distance, me réconforte et me rend plus fort. Je pense à toi à chaque instant.\n\nAvec amour,\nÀ toi`, it: `Mio caro / Mia cara,\n\nDa quando ti ho incontrato, riempi le mie giornate di felicità. Il tuo sostegno è la mia forza. Anche quando siamo lontani, ti porto sempre con me.\n\nCon amore,\nTuo/a` }; resultArea.innerText = mocks[state.lang] || mocks['en']; }
  function bindEvents(){ if (generateBtn) generateBtn.addEventListener('click', generate); if (clearBtn) clearBtn.addEventListener('click', ()=>{ keywordsEl.value=''; resultArea.innerText='—'; updatePromptPreview(); }); if (copyBtn) copyBtn.addEventListener('click', copyResult); if (downloadBtn) downloadBtn.addEventListener('click', downloadResult); qsa('.lang-btn').forEach(b => { b.addEventListener('click', () => { qsa('.lang-btn').forEach(x => x.classList.remove('selected')); b.classList.add('selected'); state.lang = b.dataset.lang || b.innerText.toLowerCase(); updateUIStrings(); updatePromptPreview(); }); }); if (themeGirlsBtn) themeGirlsBtn.addEventListener('click', ()=> applyTheme('girls')); if (themeBoysBtn) themeBoysBtn.addEventListener('click', ()=> applyTheme('boys')); keywordsEl.addEventListener('input', updatePromptPreview); qsa('input[name="tone"]').forEach(i => i.addEventListener('change', updatePromptPreview)); qsa('input[name="length"]').forEach(i => i.addEventListener('change', updatePromptPreview)); keywordsEl.addEventListener('keydown', (e) => { if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') generate(); }); } function updatePromptPreview(){ if (!promptPreview) return; const kw = (keywordsEl.value || '').trim() || '<keywords>'; const tone = (document.querySelector('input[name="tone"]:checked') || {value:'friendly'}).value; const length = (document.querySelector('input[name="length"]:checked') || {value:'long'}).value; promptPreview.innerText = buildPrompt(kw, state.lang, tone, length); } function initDefaults(){ if (backendUrlInput && (!backendUrlInput.value || backendUrlInput.value.trim() === '')) { backendUrlInput.value = DEFAULT_BACKEND.replace(/\/api\/generate$/,'') || ''; } updateUIStrings(); updatePromptPreview(); applyTheme('girls'); } bindEvents(); initDefaults(); window.SVSLoveLetter = { generate, applyTheme, setLang: (l) => { state.lang = l; updateUIStrings(); updatePromptPreview(); } }; })();
